# 📋 Mat_form.jsp (재고 등록/수정 페이지) 구현 계획

## 🎯 페이지 목적
- **재고 등록**: 새로운 재고 항목 추가
- **재고 수정**: 기존 재고 항목 정보 수정
- **MaterialDTO 기반**: 모든 필드 활용한 폼 구성

---

## 📝 폼 구성 요소

### 1. 재고코드 (materialCode)
**입력 방식**:
- **등록시**: DB 시퀀스 자동 증가로 자동 생성 (MA0001, MA0002... 순차)
- **수정시**: readonly (기존 코드 표시, 수정 불가)

**DB 연동**:
- 시퀀스: SEQ_MATERIAL_ID (자동 증가)
- 형식: MA + 4자리 숫자 (MA0001, MA0002...)
- 중복 방지: DB 시퀀스로 자동 처리

### 2. 제품코드 (standardCode)
**입력 방식**:
- **드롭다운**: DB에 저장된 기준코드(StandardDTO)에서 선택
- **FK 관계**: MaterialDTO.standardCode → StandardDTO.standardCode
- **옵션**: DB에서 동적으로 로드 (RA001, SE001, FI001 등)

**DB 연동**:
- StandardDTO 테이블에서 기준코드 목록 조회
- 제품명, 제품유형, 단위 자동 표시 (StandardDTO 조인)
- FK 제약조건으로 데이터 무결성 보장

### 3. 재고량 (maQuantity)
**입력 방식**:
- **숫자 입력 필드**: type="number"
- **최소값**: 0 이상
- **소수점**: 정수만 입력 (재고량은 정수)

**유효성 검사**:
- 필수 입력
- 양수만 입력 가능
- 최대값 제한 (예: 999999)

### 4. 담당자 (employeeNo)
**입력 방식**:
- **드롭다운**: DB에 저장된 사용자(UsersDTO)에서 선택
- **FK 관계**: MaterialDTO.employeeNo → UsersDTO.employeeNo
- **옵션**: DB에서 동적으로 로드 (사원번호, 이름)

**DB 연동**:
- UsersDTO 테이블에서 담당자 목록 조회
- 사원번호와 이름을 함께 표시
- FK 제약조건으로 데이터 무결성 보장

---

## 🎨 UI 구성

### 페이지 레이아웃
```
┌─────────────────────────────────────┐
│           헤더 (header.jsp)          │
├─────────────────────────────────────┤
│ 사이드바 │        메인 컨텐츠        │
│(sidebar) │                         │
│         │    ┌─────────────────┐   │
│         │    │   제목 (동적)    │   │
│         │    └─────────────────┘   │
│         │                         │
│         │    ┌─────────────────┐   │
│         │    │   폼 영역        │   │
│         │    │                 │   │
│         │    │ [재고코드]       │   │
│         │    │ [제품코드]       │   │
│         │    │ [재고량]         │   │
│         │    │ [담당자]         │   │
│         │    │                 │   │
│         │    │ [저장] [취소]    │   │
│         │    └─────────────────┘   │
└─────────────────────────────────────┘
```

### 폼 스타일
- **2열 레이아웃**: 라벨과 입력 필드
- **일관된 스타일**: 기존 프로젝트와 동일한 색상/폰트
- **반응형**: 모바일에서는 1열로 변경

---

## 🔄 등록/수정 모드 구분

### 등록 모드 (새 재고 추가)
**URL**: `Mat_form.jsp`
**제목**: "재고 등록"
**재고코드**: 입력 가능 (자동 생성 또는 수동)
**버튼**: [저장] [취소]

### 수정 모드 (기존 재고 수정)
**URL**: `Mat_form.jsp?code=MA0001`
**제목**: "재고 수정"
**재고코드**: readonly (기존 코드 표시)
**버튼**: [저장] [취소] [삭제]

---

## ✅ 유효성 검사

### 클라이언트 사이드 (JavaScript)
1. **필수 필드 검사**
   - 제품코드, 재고량, 담당자 (재고코드는 DB 자동 생성)
2. **형식 검사**
   - 재고량: 양수만 입력
3. **실시간 검사**
   - 입력 중 즉시 피드백

### 서버 사이드 (추후 구현)
1. **DB 시퀀스 처리**
   - 재고코드 자동 생성 (SEQ_MATERIAL_ID)
   - 중복 방지 (시퀀스로 자동 처리)
2. **FK 제약조건 검증**
   - 제품코드: StandardDTO 테이블 존재 여부 확인
   - 담당자: UsersDTO 테이블 존재 여부 확인
3. **데이터 무결성**
   - FK 제약조건으로 자동 보장

---

## 🔗 페이지 연결

### 진입 경로
- **Mat_list.jsp → Mat_form.jsp**: "재고 등록" 버튼
- **Mat_list.jsp → Mat_form.jsp?code=MA0001**: "수정" 링크

### 완료 후 경로
- **저장 성공**: Mat_list.jsp로 리다이렉트
- **취소**: Mat_list.jsp로 돌아가기
- **삭제**: Mat_list.jsp로 리다이렉트

---

## 📋 구현 단계

### Phase 1: 기본 구조 (현재 단계)
1. **HTML 폼 구조** 생성
2. **CSS 스타일링** (기존 스타일과 일관성)
3. **등록/수정 모드** 구분 로직
4. **기본 유효성 검사** (JavaScript)

### Phase 2: 데이터 연동 (추후)
1. **서블릿 Controller** 구현
2. **DAO/Service** 계층 구현
3. **데이터베이스 연동**

### Phase 3: 고급 기능 (추후)
1. **실시간 유효성 검사**
2. **에러 처리 및 메시지**
3. **성공/실패 알림**

---

## 🎨 스타일 가이드

### 색상
- **Primary**: #007bff (파란색)
- **Success**: #28a745 (초록색)
- **Danger**: #dc3545 (빨간색)
- **Secondary**: #6c757d (회색)

### 폰트
- **Family**: Arial, sans-serif
- **Size**: 1em (기본), 1.5em (제목)

### 버튼
- **저장**: btn btn-success (초록색)
- **취소**: btn btn-secondary (회색)
- **삭제**: btn btn-danger (빨간색)

---

## 📝 샘플 데이터

### 등록시 기본값
- **재고코드**: DB 시퀀스 자동 생성 (MA0014, MA0015...)
- **제품코드**: 첫 번째 옵션 선택
- **재고량**: 0
- **담당자**: 첫 번째 옵션 선택

### 수정시 기존 데이터
- **재고코드**: MA0001 (readonly)
- **제품코드**: RA001 (기존 값)
- **재고량**: 25 (기존 값)
- **담당자**: 김재고 (기존 값)

---

**작성일**: 2024년 1월
**작성자**: MES 시스템 개발팀
**버전**: 1.0
