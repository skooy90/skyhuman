재고 관리 CRUD 구상 계획
1. 데이터 구조 분석
MaterialDTO (재고 정보):
materialCode: 재고코드 (MA0001) - PK, 자동생성
standardCode: 제품코드 (FK → StandardDTO)
employeeNo: 담당자 (FK → UsersDTO)
maQuantity: 재고량
maCreationDate: 생성일
maUpdateDate: 수정일
관계 테이블:
StandardDTO: 제품 정보 (제품코드, 제품명, 유형, 단위)
UsersDTO: 사용자 정보 (사원번호, 이름, 직급)
2. CRUD 구조 설계
2.1 MatDAO (데이터 접근 계층)
2.2 MatController (서블릿)
3. 페이지별 기능 매핑
3.1 Mat_list.jsp (목록 페이지)
URL: /material/list
기능:
전체 재고 목록 조회
제품 유형별 필터링
검색 (재고코드, 제품명)
정렬 (재고량 기준)
통계 정보 표시
3.2 Mat_detail.jsp (상세 페이지)
URL: /material/detail?code=MA0001
기능:
특정 재고 상세 정보
관련 제품 비교 그래프
재고 이력 (하드코딩)
통계 정보
3.3 Mat_form.jsp (등록/수정 폼)
URL: /material/form (등록), /material/form?code=MA0001 (수정)
기능:
재고 등록/수정 폼
제품코드 드롭다운 (StandardDTO 연동)
담당자 드롭다운 (UsersDTO 연동)
유효성 검사
4. 데이터베이스 연동
4.1 SQL 쿼리 예시
4.2 시퀀스 활용
5. 구현 순서
MatDAO 클래스 구현 - DB 연동 메서드들
MatController 서블릿 구현 - 요청 처리 로직
JSP 페이지 수정 - 하드코딩된 데이터를 서버 데이터로 교체
DB 연결 테스트 - 실제 데이터 CRUD 동작 확인
에러 처리 및 예외 상황 대응
6. 주요 고려사항
FK 관계: StandardDTO, UsersDTO와의 JOIN 처리
자동생성: 재고코드 시퀀스 활용
유효성 검사: 서버사이드 검증 로직
에러 처리: DB 연결 실패, 중복 데이터 등
성능: 페이징 처리, 인덱스 활용