package sec01.exam01;

public class VarTypeExam02 {

	public static void main(String[] args) {
		
		byte b1;
		// byte���엯�쓽 b1蹂��닔瑜� �깮�꽦�뻽�떎
		b1 = 127;
		System.out.println(" b1 : " + b1);
//		b1 = 128;
//		System.out.println(" b1 : " + b1);
//		諛붿씠�듃�쓽 �슜�웾�씠 127�씠湲� �븣臾몄뿉 128�씠 �뱾�뼱媛�硫� �뿉�윭 諛쒖깮
		// 臾몄옄�룄 �쑀�땲肄붾뱶踰덊샇媛� �엳�떎. 
		char c1 = 65;
		System.out.println("c1 : " + c1);
		c1 = 65 + 2;
		System.out.println("c1 : " + c1);
		char c2 = 'F';
		
		System.out.println("c2 : " + c2);
		System.out.println("c1 - c2 : " + (c2 - c1));
		
		char c3 = 'd'; 
		// char�뿉 �븳湲��룄 �꽔�쓣 �닔 �엳�떎. �떒, �븳湲��옄留�
		
		System.out.println("c3 " + c3);
		System.out.println("c3 : " + (c3 + 1));
		
		
		
		String s1 = "�넚援ъ쁺";
		System.out.println("s1 : " + s1);
		
		String s2 = "�넚\"援ъ쁺";
		System.out.println("s2 : " + s2);
		
		// \(�뿭�뒳�옒�돩) �뒗 escape臾몄옄濡� \�뮘�뒗 �븯�굹�쓽 臾몄옄濡� 蹂몃떎.
		
		String s3 = "�넚\t援�\n�쁺";
		// \t : tap �꺆 湲곕뒫 , \n : newline �뿏�꽣 湲곕뒫 
		System.out.println("s3: " + s3);
		
		s3 = s3 + "湲��뵪";
		// 湲��뵪 �뜑�븯湲� 湲��뵪�뒗 湲��뵪媛� �맂�떎
		// s3 = s3 + 13;
		s3 = s3 + 1 + 3 + (1+3);
		// 湲��뵪 �뜑�븯湲� �닽�옄�룄 湲��뵪濡� �씤�떇�씠 �맂�떎.
		// �뜑�븯湲곕뒗 �쇊履쎈��꽣 吏꾪뻾�씠 �릺�뼱 �닽�옄媛� 湲��옄濡� �씤�떇�씠 �맂�떎
		// �떒, (愿꾪샇) �븞�뿉 �닽�옄癒쇱� �뜑�븯硫� �닽�옄+�닽�옄濡� �씤�떇�븯寃� �맂�떎.
		System.out.println("s3 :" + s3);

		
		String s4 = 3+3+"湲��뵪";
		System.out.println("s4 : " + s4);
		// �닽�옄瑜� 癒쇱� �뜑�븯怨� 湲��뵪瑜� �뜑�븯硫� �닽�옄+�닽�옄+湲��뵪媛� �릺�뼱
		// �닽�옄 怨꾩궛�쓣 癒쇱��븯怨� 湲��옄媛� �맂�떎.
		
		int i1 = 2100000000;
//		int i2 = 2200000000; �븞�맂�떎.
		
		long l1 = 2200000000L;
		// -> int���엯�뿉 L瑜� 遺숉� 紐낆떆�쟻�씤 long�깙�쑝濡� 諛붾�먮떎
		// L �씠 �뾾�쑝硫� int�삎�쑝濡� 遊먯꽌 21�뼲 �씠�긽�� 紐삳꽔�뒗�떎
		// 21�뼲 �씠�븯 �닽�옄�뒗 L�뾾�씠 媛��뒫�븯�떎
		long l2 = 123; // 媛��뒫
		
/////////////////////////////////////////////////////////////////////		
		
		float f1 = 3.14f;
		double d1 = 3.14;
		System.out.println("f1 : " + f1);
		System.out.println("d1 : " + d1);
		
				
		float f2 = 0.123456789f;
		System.out.println("f2 : " + f2);
		// 9媛� 諛섏삱由쇱씠 �맂�떎 遺��룞�냼�닔�젏
		// float�� �냼�닔�젏 8�옄由ш퉴吏�留� ���옣�씠 媛��뒫�븯�뿬 諛섏삱由쇳븳�떎.
		// float�뒗 7�옄由� 源뚯�留� �떊猶곌� 媛��뒫�븯�떎.
		// �젙諛��룄 : �냼�닔�젏 7�옄由�
		
		double d2 = 0.12345678901234567890;
		System.out.println("d2 : " + d2);
		// 16源뚯� �굹�삤硫� 17�옄由ъ뿉�꽌 諛섏삱由쇱쓣 �븳�떎.
		// double�쓽 �젙諛��룄 : �냼�닔�젏 16�옄由�
		
///////////////////////////////////////////////////////////////////////
		//�끉由� ���엯
		
		boolean stop = true;
		boolean start = false;
		// 李� 怨� 嫄곗쭞�쓣 援щ텇�븳�떎.
		
///////////////////////////////////////////////////////////////////
		//臾몄젣 1
		// 1. �궡 �굹�씠瑜� ���옣�븯�떆�삤
		int age = 30;
		System.out.println("�굹�씠�뒗 : " + age + "�궡");
		// 2. �궡 �냼�쑀 李④� �엳�떎.
		boolean car = true; 
		System.out.println("李� �냼�쑀 �뿬遺� :" + car);
		// 3. �슦由ъ쭛�뿉 �엳�뒗 �뒪留덊듃�룿�쓽 媛쒖닔
		int phone = 5;
		System.out.println("�뒪留덊듃�룿 媛��닔 : " + phone + "媛�");
		// 4. �궡 �씠由� �젙�븯�떆�삤
		String name = "�넚援ъ쁺";
		System.out.println("�씠由꾩� : " + name + "�엯�땲�떎.");
		// 5. 1�룊�� 3.3�젣怨깅�명꽣�엯�땲�떎. 5�룊�� 紐�?
		double area = 5.0 * 3.3;
		System.out.println("5�룊�� : " + area + "�엯�땲�떎.");
		
		
		
		
		// 臾몄젣 2
	// �댁쫰1.
		/* 
		 * �몢 蹂��닔 a,b�뿉 媛곴컖 3,4瑜� �꽔怨�
		 * 異쒕젰 "3怨� 4". �떒, 蹂��닔瑜� �솢�슜�빐�꽌
		 * */
		int a = 3;
		int b = 4;
		System.out.println(a+"怨�"+b);
		
		
		
	// �댁쫰1-1.
		/*
		 * �몢 蹂��닔 a,b�뿉
		 * 異쒕젰 寃곌낵 : " 3 > 4�쓽 寃곌낵�뒗 false �엯�땲�떎. */
		System.out.println("3 > 4 �쓽 寃곌낵�뒗 " + (a>b) + "�엯�땲�떎");
	// �댁쫰 1-2 �몢蹂��닔�쓽 媛믪쓣 6,5蹂�寃�
		// 異쒕젰 寃곌낵 : " 6 > 5�쓽 寃곌낵�뒗 true �엯�땲�떎
		a = 6;
		b = 5;
		System.out.println(a + " > " + b + "�쓽 寃곌낵�뒗 " + (a>b) + "�엯�땲�떎");
		
		/*�댁쫰 2
		 * �닽�옄 132
		 * 異쒕젰寃곌낵 �삁)
		 * "諛깆쓽 �옄由� : 1"
		 * "�떗�쓽 �옄由� : 3"
		 * "�씪�쓽 �옄由� : 2"
		 * 
		 * */
		int num = 987;
		int n1 = num / 100;
		int n2 = num % 100 / 10;
		int n3 = num % 10;
		System.out.println("�닽�옄�뒗 : " + num);
		System.out.println("諛깆쓽 �옄由щ뒗 : " + n1);
		System.out.println("�떗�쓽 �옄由щ뒗 : " + n2);
		System.out.println("�씪�쓽 �옄由щ뒗 : " + n3);
		
		
		/*
		 * �몢 蹂��닔 h, m�뿉 媛곴컖 �떆媛꾧낵 遺꾩쓣 �꽔�뒿�땲�떎.
		 * +35遺� �븳 寃곌낵瑜� 異쒕젰
		 * 		 * 
		 * */
		int h = 1;
		int m = 54;
	System.out.println((h+(m+35)/60) + "�떆" + ((m+35)%60) + "遺�");
		
	
	}

}
